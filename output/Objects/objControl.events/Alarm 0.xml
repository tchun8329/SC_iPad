<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="ALARM" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// Start drawing onto minimap image
surface_set_target(minimapImage);

// Clear the surface with white
//draw_clear(minimapColor);
draw_background_stretched(bgWasteland,0,0,minimapImageWidth,minimapImageHeight);
draw_set_alpha(1);

//Initialize some variables
var minimapRangeX, minimapRangeY, minimapViewAreaX, minimapViewAreaY;
minimapRangeX = minimapImageWidth/room_width; //0-1 value to measure the X drawing coordinates
minimapRangeY = minimapImageHeight/room_height; //0-1 value to measure the Y drawing coordinates
//minimapViewAreaX = view_xview[0]*minimapRangeX; //X coordinate of viewing area on minimap
//minimapViewAreaY = view_yview[0]*minimapRangeY; //Y coordinate of viewing area on minimap


// Redraw everything onto minimap

/*
// Draw all enemies
with(baseUnit) {
  //If it is inside the room, draw it
  draw_set_color(c_green);
  draw_circle(x*minimapRangeX,y*minimapRangeY,3.5*other.minimapScaleFactor,0);
}
*/

// Draw all units
with(baseUnit)
{
    //show_message(string(x) + " " + string(y));
    if (x &gt; 0 &amp;&amp; y &gt; 0 &amp;&amp; x &lt; room_width &amp;&amp; y &lt; room_height)
    {
        draw_set_color(make_color_rgb(1,75,15));
        if(flags &amp; UNIT_FLAG_DRAWSELECT)
        {
            draw_set_color(make_color_rgb(4,249,47));
        }
        draw_circle(x*minimapRangeX,y*minimapRangeY,3*other.minimapScaleFactor,0);
    }
}

/*
// Draw all blocks
with(obj_block)
{
    // If it is inside the room, draw it
    if (x &gt; 0 &amp;&amp; y &gt; 0 &amp;&amp; x &lt; room_width &amp;&amp; y &lt; room_height)
    {
        draw_set_color(c_black);
        draw_square(x*_minimapRangeX,y*_minimapRangeY,1.75*other.minimapScaleFactor,0);
    }
}
*/
/*
// Draw the viewing area on minimap
draw_set_color(c_black);
draw_rectangle(minimapViewAreaX,minimapViewAreaY,minimapViewAreaX+(view_wview[0]*minimapRangeX),minimapViewAreaY+(view_hview[0]*minimapRangeY),1);
*/
// Draw minimap outline
draw_set_color(c_black);
draw_rectangle(0,0,minimapImageWidth-1,minimapImageHeight-1,1);

// Stop drawing onto surface
surface_reset_target();
// Continue updating...
alarm[0] = minimapUpdateInterval;
</argument>
      </arguments>
    </action>
  </actions>
</event>
